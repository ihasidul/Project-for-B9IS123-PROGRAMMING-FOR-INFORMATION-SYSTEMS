"""Add created_at and updated_at to Product model

Revision ID: cfa0cc349689
Revises: 17a5c8b1fec0
Create Date: 2025-07-11 18:57:28.681809+00:00

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "cfa0cc349689"
down_revision: Union[str, None] = "17a5c8b1fec0"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Add columns as nullable first (SQLite compatible approach)
    op.add_column(
        "product",
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            nullable=True,
        ),
    )
    op.add_column(
        "product",
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            nullable=True,
        ),
    )

    # Update existing rows with current timestamp
    op.execute(
        "UPDATE product SET created_at = datetime('now'), updated_at = datetime('now')"
    )

    # Note: SQLite doesn't support ALTER COLUMN to change nullable constraint
    # The columns will remain nullable, but the model will handle defaults
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("product", "updated_at")
    op.drop_column("product", "created_at")
    # ### end Alembic commands ###
